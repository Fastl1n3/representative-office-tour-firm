CREATE TABLE Tourist (
    tourist_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    firstname VARCHAR(30) NOT NULL,
    lastname VARCHAR(30) NOT NULL,
    patronymic VARCHAR(30),
    passport_id BIGINT NOT NULL UNIQUE,
    gender VARCHAR(1) NOT NULL CHECK (gender IN ('M', 'F')),
    date_of_birth DATE NOT NULL,
    is_child BOOLEAN DEFAULT FALSE,
    parent INT REFERENCES Tourist(tourist_id) ON DELETE CASCADE
);

CREATE TABLE Flight (
    flight_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    flight_number VARCHAR(10) NOT NULL,
    plane_type VARCHAR(2) NOT NULL CHECK (plane_type IN ('C','CP')),
    date_time TIMESTAMP NOT NULL,
    depart_city VARCHAR(30) NOT NULL,
    destin_city VARCHAR(30) NOT NULL
);

CREATE TABLE "Group" (
    group_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    people_number INT DEFAULT 0,
    flight_to int,
    flight_back int,
    FOREIGN KEY (flight_to) REFERENCES Flight(flight_id) ON DELETE SET NULL,
    FOREIGN KEY (flight_back) REFERENCES Flight(flight_id) ON DELETE SET NULL
);

CREATE TABLE Tourist_Group (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    tourist_id INT,
    group_id INT,
    tourist_type VARCHAR(3) NOT NULL CHECK (tourist_type IN ('cmp', 'crg')),
    UNIQUE (tourist_id, group_id),
    FOREIGN KEY (tourist_id) REFERENCES Tourist(tourist_id) ON DELETE CASCADE,
    FOREIGN KEY (group_id) REFERENCES "Group"(group_id) ON DELETE CASCADE
);

CREATE TABLE Excursions_agency (
    agency_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(30) NOT NULL UNIQUE,
    rating NUMERIC(2,1) DEFAULT 0.0 CHECK (rating >= 0 AND rating <= 5)
);

CREATE TABLE Excursion (
    excursion_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(50) NOT NULL,
    description TEXT NOT NULL,
    price NUMERIC(10, 2) NOT NULL CHECK (price > 0::numeric),
    duration INT NOT NULL CHECK (duration > 0),
    agency_id INT NOT NULL,
    FOREIGN KEY (agency_id) REFERENCES Excursions_agency(agency_id) ON DELETE CASCADE
);

CREATE TABLE Excursion_schedule (
    excursion_id INT,
    date_time TIMESTAMP,
    FOREIGN KEY (excursion_id) REFERENCES Excursion(excursion_id) ON DELETE CASCADE,
    PRIMARY KEY (excursion_id, date_time)
);

CREATE TABLE Tourist_Excursion (
    tourist_group_id INT,
    excursion_id INT,
    visit_date TIMESTAMP NOT NULL,
    FOREIGN KEY (tourist_group_id) REFERENCES Tourist_Group(id) ON DELETE CASCADE,
    FOREIGN KEY (excursion_id) REFERENCES Excursion(excursion_id) ON DELETE CASCADE,
    PRIMARY KEY (tourist_group_id, excursion_id)
);

CREATE TABLE Transport_list (
    list_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    owner_id INT NOT NULL REFERENCES Tourist(tourist_id),
    seats_number INT NOT NULL CHECK (seats_number > 0),
    package_price NUMERIC(10, 2) NOT NULL CHECK (package_price > 0::numeric),
    insurance_price NUMERIC(10, 2) NOT NULL CHECK (insurance_price > 0::numeric),
    delivery_price NUMERIC(10, 2) NOT NULL CHECK (delivery_price > 0::numeric),
    flight_id INT NOT NULL REFERENCES Flight(flight_id) ON DELETE CASCADE,
    compilation_date TIMESTAMP NOT NULL
);

CREATE TABLE Storage (
     cargo_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
     owner_id INT NOT NULL REFERENCES Tourist(tourist_id),
     marking VARCHAR(100) NOT NULL,
     weight NUMERIC(7,2) NOT NULL CHECK (weight > 0.0),
     package VARCHAR(20) NOT NULL,
     delivery_date TIMESTAMP NOT NULL,
     price NUMERIC(10, 2) NOT NULL CHECK (price > 0::numeric),
     transport_list_id INT REFERENCES Transport_list(list_id) ON DELETE SET NULL
);

CREATE TABLE Hotel_room (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    hotel_name VARCHAR(30) NOT NULL,
    type_room VARCHAR(20) NOT NULL,
    day_price NUMERIC(10, 2) NOT NULL CHECK (day_price > 0::numeric),
    UNIQUE(hotel_name, type_room)
);

CREATE TABLE Accommodation (
    tourist_group_id INT PRIMARY KEY REFERENCES Tourist_Group(id) ON DELETE CASCADE,
    check_in_date TIMESTAMP NOT NULL,
    check_out_date TIMESTAMP NOT NULL,
    hotel_room_id INT NOT NULL REFERENCES Hotel_room(id) ON DELETE CASCADE
);

CREATE TABLE Service_fee (
    service_type VARCHAR(15) PRIMARY KEY,
    fee INT NOT NULL CHECK (fee >= 0 AND fee <= 100)
);

CREATE TABLE Spending (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    tourist_id INT NOT NULL,
    service_type VARCHAR(15) NOT NULL,
    cost NUMERIC(10, 2) NOT NULL CHECK (cost > 0::numeric),
    spend_date TIMESTAMP NOT NULL,
    FOREIGN KEY (tourist_id) REFERENCES Tourist(tourist_id),
    FOREIGN KEY (service_type) REFERENCES Service_fee(service_type)
);

ALTER TABLE Flight ADD CONSTRAINT unique_flight_params UNIQUE (flight_number, date_time);
ALTER TABLE Flight ADD CONSTRAINT check_depart_city CHECK (depart_city IN ('Athens', 'Moscow'));
ALTER TABLE Flight ADD CONSTRAINT check_destin_city CHECK (destin_city IN ('Athens', 'Moscow'));
